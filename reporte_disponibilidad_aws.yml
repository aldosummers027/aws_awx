---
- name: Generar y Subir Reporte de Disponibilidad de AWS
  hosts: all
  gather_facts: no
  connection: local

  vars:
    report_path: "/tmp/reporte_disponibilidad.csv"
    start_date: "2025-09-01T00:00:00Z"
    end_date: "2025-09-30T23:59:59Z"
    dias_del_mes: 30
    s3_endpoint_url: "http://172.30.194.105:9000"
    s3_bucket_name: "awx"

  tasks:
    - name: "Crear encabezado del archivo CSV"
      lineinfile:
        path: "{{ report_path }}"
        line: "Instance ID,Instance Name,Horas Encendido (Septiembre),Disponibilidad (%)"
        create: yes
        mode: '0644'
      delegate_to: localhost
      run_once: true

    - name: "Consultar métricas de CloudWatch usando la credencial de AWS"
      ansible.builtin.command: >
        aws cloudwatch get-metric-statistics
        --namespace AWS/EC2
        --metric-name CPUUtilization
        --dimensions Name=InstanceId,Value={{ inventory_hostname }}
        --start-time "{{ start_date }}"
        --end-time "{{ end_date }}"
        --period 3600
        --statistics SampleCount
        --region {{ hostvars[inventory_hostname].placement.region }}
      register: cloudwatch_data
      delegate_to: localhost
      changed_when: false

    - name: "Procesar datos y añadir al CSV"
      # ... (Esta tarea no cambia)
      vars:
        total_datapoints: "{{ (cloudwatch_data.stdout | from_json).Datapoints | sum(attribute='SampleCount') | int }}"
        horas_encendido: "{{ '%.2f' | format(total_datapoints | float) }}"
        total_horas_periodo: "{{ dias_del_mes * 24 }}"
        porcentaje_disponibilidad: "{{ '%.2f' | format((horas_encendido | float / total_horas_periodo | float) * 100) }}"
      lineinfile:
        path: "{{ report_path }}"
        line: >-
          {{ inventory_hostname }},
          {{ hostvars[inventory_hostname].ec2_tag_Name | default(inventory_hostname) }},
          {{ horas_encendido }},
          {{ porcentaje_disponibilidad }}%
      delegate_to: localhost

    - name: "Subir el reporte a MinIO usando AWS CLI"
      ansible.builtin.shell: |
        unset AWS_SESSION_TOKEN AWS_SECURITY_TOKEN
        aws s3 cp {{ report_path }} s3://{{ s3_bucket_name }}/reportes/disponibilidad-{{ lookup('pipe', 'date +%Y-%m-%d') }}.csv --endpoint-url {{ s3_endpoint_url }}
      environment:
        # Definimos explícitamente las credenciales de MinIO para este comando
        AWS_ACCESS_KEY_ID: "{{ minio_access_key }}"
        AWS_SECRET_ACCESS_KEY: "{{ minio_secret_key }}"
        AWS_DEFAULT_REGION: "us-east-1"
      delegate_to: localhost
      run_once: true
      changed_when: true
